version: '3'
services:
    # letsencrypt:
    #     container_name: 'certbot-service'
    #     image: certbot/certbot
    #     # command: sh -c "certbot certonly --webroot -w /tmp/acme_challenge -d ${APP_DOMAIN:-localhost} --text --agree-tos --email chome@codebranch.com --rsa-key-size 4096 --verbose --keep-until-expiring --preferred-challenges=http"
    #     command: sh -c "for i in {1..5}; do wget -q www.google.com && echo 'WE GOT IT' || echo 'Failure' && sleep 5; done"
    #     # command: sh -c "wget -q www.google.com && echo 'WE GOT IT' || echo 'Failure'"
    #     entrypoint: ''
    #     volumes:
    #         - '/etc/letsencrypt:/etc/letsencrypt'
    #         - '/tmp/acme_challenge:/tmp/acme_challenge'
    #     environment:
    #         - TERM=xterm
    #         # - APP_DOMAIN=${APP_DOMAIN:-localhost}
    #         - APP_DOMAIN=non.existent-domain.com
    #     # healthcheck:
    #     #     test: curl http://$APP_DOMAIN/.check-health || exit 1
    #     #     interval: 60s
    #     #     retries: 5
    #     #     start_period: 20s
    #     #     timeout: 10s
    #     depends_on:
    #         - web-app
    web-app:
        # image: 568568194868.dkr.ecr.us-east-1.amazonaws.com/involvehub-admindashboard:prestaging
        image: involvehub-admindashboard:prestaging
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '443:443'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        volumes:
            - '.env:/var/www/html/.env'
            # Nginx
            # - './nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf'
            # Let's Encrypt
            # - '/etc/letsencrypt:/etc/letsencrypt:ro'
            # - '/tmp/acme_challenge:/tmp/acme_challenge'
        environment:
            APP_DOMAIN: '${APP_DOMAIN:-localhost}'
        networks:
            - app-network
        depends_on:
            # - letsencrypt
            - mariadb
            - redis
            - soketi
    mariadb:
        image: 'mariadb:10'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'app-mariadb:/var/lib/mysql'
        networks:
            - app-network
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'app-redis:/data'
        networks:
            - app-network
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        environment:
            SOKETI_DEBUG: '1'
            SOKETI_METRICS_SERVER_PORT: '9601'
            SOKETI_SSL_CERT: '/etc/letsencrypt/live/admin.involvehub.com/fullchain.pem'
            SOKETI_SSL_KEY: '/etc/letsencrypt/live/admin.involvehub.com/privkey.pem'
            SOKETI_SSL_CA: '/etc/letsencrypt/live/admin.involvehub.com/chain.pem'
        ports:
            - '${SOKETI_PORT:-6001}:6001'
            - '${SOKETI_METRICS_SERVER_PORT:-9601}:9601'
        volumes:
            # Let's Encrypt
            - '/etc/letsencrypt:/etc/letsencrypt:ro'
        # depends_on:
        # - letsencrypt
        networks:
            - app-network
networks:
    app-network:
        driver: bridge
volumes:
    app-mariadb:
        driver: local
    app-redis:
        driver: local
